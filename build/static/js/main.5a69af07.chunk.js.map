{"version":3,"sources":["contexts/user-context.js","components/menu-content/index.js","components/modal/index.js","components/table/table-row.js","components/table/index.js","fire.js","views/products/ProductDetails.js","views/products/ProductsList.js","views/products/ProductCreate.js","routers/ProductsRouter.js","views/home/Home.js","routers/HomeRouter.js","routers/AppRouter.js","views/sign-in/SignIn.js","routers/SessionRouter.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","React","createContext","onClick","props","route","history","push","onChange","withRouter","className","icon","text","intent","Modal","isOpen","class","title","aria-label","onClose","content","footer","TableRow","columns","data","index","map","column","align","style","width","length","renderContent","isValidElement","Array","isArray","Table","label","tableHeaders","element","key","id","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fire","firestore","ProductDetails","product","name","reference","description","providers","prov","price","useState","showDialog","setShowDialog","selectedRow","setSelectedRow","isLoading","setIsLoading","products","setProducts","useEffect","collection","get","then","snapshot","empty","console","log","prods","forEach","doc","prod","Object","assign","getProduct","plus","location","pathname","onClickNewProd","onClickDetails","closeDialog","ProductCreate","state","provider","handleSave","bind","this","setState","placeholder","disabled","value","e","target","leftIcon","loading","Component","path","match","component","ProductsList","Home","loggedInUser","displayName","menuOpen","setMenuOpen","keys","sidebar","open","onSetOpen","styles","background","Group","Divider","type","dir","position","Position","BOTTOM_LEFT","onSignOut","to","SignIn","user","setUser","password","setPassword","auth","signInWithEmailAndPassword","response","onSignIn","catch","error","alert","code","message","signIn","onUserLogged","document","exact","loader","storeUser","setLoggedInUser","localStorage","setItem","JSON","stringify","App","localUser","getItem","parse","Provider","fallback","Consumer","context","Boolean","window","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a69af07.chunk.js","sourcesContent":["import React  from 'react';\nconst UserContext = React.createContext({}); // Create a context object\n\nexport {\n  UserContext // Export it so it can be used by other Components\n};","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { Button } from \"@blueprintjs/core\";\nimport './styles.scss';\n\n\nconst onClick = (props, route) => {\n  props.history.push(`/app/${route}`);\n  props.onChange && props.onChange();\n}\nconst MenuContent = (props) => {\n  return (\n    <div className=\"menu-options-container\">\n      <Button \n        className=\"bp3-minimal\" \n        icon=\"cog\" text=\"Productos\"\n        onClick={() => onClick(props, 'products')}\n        intent=\"primary\" />\n      <Button \n        className=\"bp3-minimal\" \n        icon=\"list-detail-view\" \n        text=\"Ventas\" \n        onClick={() => onClick(props, 'sales')}\n        intent=\"primary\" />\n  </div> );\n}\n\nexport default withRouter(MenuContent);","import React from 'react';\nimport { Dialog } from \"@blueprintjs/core\";\nimport './styles.scss';\n\nconst Modal = (props) => {\n  return (\n    <Dialog isOpen={props.isOpen}>\n      <div class=\"bp3-dialog-header\">\n        <span class=\"bp3-icon-large bp3-icon-inbox\"></span>\n        <h4 class=\"bp3-heading\">{ props.title }</h4>\n        <button \n          aria-label=\"Close\" \n          class=\"bp3-dialog-close-button bp3-button bp3-minimal bp3-icon-cross\"\n          onClick={() => props.onClose()}></button>\n      </div>\n      <div class=\"bp3-dialog-body\">\n        { props.content }\n      </div>\n      <div class=\"bp3-dialog-footer\">\n        <div class=\"bp3-dialog-footer-actions\">\n          { props.footer }\n        </div>\n      </div>\n  </Dialog> );\n}\n\nexport default Modal;","import React from 'react';\n\nconst TableRow = ({columns, data, index}) => {\n  const renderContent = (content) => {\n    if (React.isValidElement(content)) return content;\n    if (typeof content === 'string') return content\n    if (typeof content === 'function') return renderContent(content(data));\n    if (Array.isArray(content)) return <div className=\"table-column-content\">{content}</div>\n  };\n  return (\n    <tr className={`table-row ${index % 2 !== 0 && 'dark'}`}>\n      { columns.map(column => \n        <td className={`table-column-cell ${column.align || ''}`} style={{width: `${100/columns.length}%`}}>\n          {renderContent(column.content)}\n        </td>) }\n    </tr>);\n}\n\nexport default TableRow;","import React from 'react';\nimport './styles.scss';\nimport TableRow from './table-row';\n\nconst Table = ({columns, data}) => {\n  const tableHeaders = (columns) => {\n    return columns.map(column => \n      <th style={{width: `${100/columns.length}%`}} className={`table-column-cell ${column.align}`} >{column.label}</th>)\n  }\n\n  return(\n    <table class=\"bp3-html-table\">\n      <thead>\n        <tr className=\"table-row header\">\n          {tableHeaders(columns)}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((element, index) => ( <TableRow index={index} key={element.id} columns={columns} data={element} />))}\n      </tbody>\n    </table>);\n}\n\nexport default Table;","import firebase from 'firebase';\nvar config = {\n    apiKey: \"AIzaSyAFL7aGFHP7Chz4d8W00-AWKvYXN937psg\",\n    authDomain: \"hardwarestorestock.firebaseapp.com\",\n    databaseURL: \"https://hardwarestorestock.firebaseio.com\",\n    projectId: \"hardwarestorestock\",\n    storageBucket: \"hardwarestorestock.appspot.com\",\n    messagingSenderId: \"463081255449\",\n    appId: \"1:463081255449:web:87b66d53071bdea13bf088\",\n    measurementId: \"G-SF0J6BJ8VY\"\n};\n  // Initialize Firebase\nvar app = firebase.initializeApp(config);\nvar fire = firebase.firestore(app);\nexport default fire;","import React from 'react';\nimport { Text } from \"@blueprintjs/core\";\n\nconst ProductDetails = ({product}) => {\n  return (\n    <div className=\"product-details-container\">\n      <div className=\"product-details-row\">\n        <Text className=\"item\"><strong>Nombre: </strong>{product.name}</Text>\n        <Text className=\"item\"><strong>Referencia: </strong>{product.reference}</Text>\n        <Text className=\"item\"><strong>Descripción: </strong>{product.description}</Text>\n        <Text className=\"item\"><strong>Proveedores: </strong>{product.providers.map(prov => `${prov}, `)}</Text>\n        <Text className=\"item\"><strong>Precio: </strong>${product.price}</Text>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductDetails","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router';\nimport { Text, H2, Button, Spinner } from \"@blueprintjs/core\";\nimport Modal from '../../components/modal';\nimport Table from '../../components/table';\nimport fire from '../../fire';\nimport ProductDetails from './ProductDetails';\nimport './styles.scss';\n\nconst ProductsList = (props) => {\n  const [showDialog, setShowDialog] = useState(false);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [products, setProducts] = useState(null);\n  \n  const getProduct = (setProducts, setIsLoading) => {\n    fire.collection('products').get().then(snapshot => {\n      if (snapshot.empty) {\n        console.log('No matching documents.');\n        return;\n      }\n\n      let prods = [];\n      snapshot.forEach(doc => {\n        let prod = Object.assign({}, doc.data(), {id: doc.id})\n        prods.push(prod);\n      });\n      setProducts(prods)\n      setIsLoading(false)\n    });\n  }\n  \n  useEffect(() => {\n    if (!products) {\n      getProduct(setProducts, setIsLoading);\n    }\n  })\n\n  const onClickNewProd = (props) => {\n    props.history.push(`${props.history.location.pathname}/new`)\n  }\n\n  const onClickDetails = (setShowDialog, setSelectedRow, data) => {\n    setShowDialog(true);\n    setSelectedRow(data);\n  }\n\n    \n  const closeDialog = (setShowDialog, setSelectedRow) => {\n    setShowDialog(false);\n    setSelectedRow(null);\n  }\n  \n  const columns = (setShowDialog, setSelectedRow) =>  [\n    { \n      label: 'Referencia',\n      content: (data) => `${data.reference}`,\n    },\n    { \n      label: 'Nombre',\n      content: (data) => data.name || '-',\n    },\n    { \n      label: 'Descripción',\n      content: (data) => data.description || '-',\n    },\n    { \n      label: 'Precio',\n      content: (data) => data.price ? `$${data.price}` : '-',\n      align: 'center'\n    },\n    { \n      label: '',\n      content: (data) => \n          <Button \n            className=\"bp3-minimal\" \n            icon=\"more\" \n            onClick={() => onClickDetails(setShowDialog, setSelectedRow, data)} \n            intent=\"primary\" />,\n      align: 'right',\n    },\n  ];\n\n  return isLoading ? <Spinner /> : \n    <div className=\"product-list-container\">\n      <H2><Text>Listado de Productos</Text></H2>\n      <Button\n        className=\"new-product-button\"\n        text=\"Nuevo producto\"\n        intent=\"primary\"plus\n        icon=\"plus\"\n        onClick={() => onClickNewProd(props)} />\n      <Table columns={columns(setShowDialog, setSelectedRow)} data={products} />\n      <Modal\n        key={showDialog}\n        isOpen={showDialog}\n        onClose={() => closeDialog(setShowDialog, setSelectedRow)}\n        title=\"Detalle de producto\"\n        content={<ProductDetails product={selectedRow}/>}\n      />\n    </div>\n}\n\nexport default withRouter(ProductsList);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Text, H2, InputGroup, Button, Spinner } from \"@blueprintjs/core\";\nimport './styles.scss';\n\nclass ProductCreate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      reference: '',\n      price: '',\n      description: '',\n      provider: [],\n      isLoading: false,\n    }\n\n    this.handleSave = this.handleSave.bind(this);\n  }\n\n  handleSave() {\n    this.setState({\n      isLoading: true,\n    }, () => {\n      const newProd = {\n        name: this.state.name,\n        price: this.state.price,\n        reference: this.state.reference,\n        description: this.state.description\n      }\n      debugger\n    })\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <div className=\"product-create-container\">\n        <H2><Text>Nuevo Producto</Text></H2>\n          <div className=\"left-container\">\n            <div className=\"field\">\n              <Text className=\"label\"><strong>Nombre:</strong></Text>\n              <InputGroup \n                className=\"form-control\" \n                placeholder=\"Ejemplo: Clavo\"\n                disabled={this.state.isLoading}\n                value={this.state.name}\n                onChange={(e) => this.setState({ name: e.target.value})}/>\n            </div>\n            <div className=\"field\">\n              <Text className=\"label\"><strong>Precio:</strong></Text>\n              <InputGroup \n                className=\"form-control\" \n                placeholder=\"$\"\n                disabled={this.state.isLoading}\n                value={this.state.price}\n                leftIcon=\"dollar\"\n                onChange={(e) => this.setState({ price: e.target.value })}/>\n            </div>\n          </div>\n          <div className=\"right-container\">\n            <div className=\"field\">\n              <Text className=\"label\"><strong>Referencia:</strong></Text>\n              <InputGroup \n                className=\"form-control\" \n                placeholder=\"Ejemplo: 1253\"\n                disabled={this.state.isLoading}\n                value={this.state.reference}\n                onChange={(e) => this.setState({ reference: e.target.value })}/>\n            </div>\n            <div className=\"field\">\n              <Text className=\"label\"><strong>Descripción:</strong></Text>\n              <InputGroup \n                className=\"form-control\" \n                disabled={this.state.isLoading}\n                placeholder=\"Ejemplo: Clavo de 3 cm\"\n                value={this.state.description}\n                onChange={(e) => this.setState({ description: e.target.value })}/>\n            </div>\n          </div>\n          <Button\n            className=\"new-product-button\"\n            text={isLoading ? 'Guardando..' : 'Guardar'}\n            disabled={isLoading}\n            intent=\"primary\"\n            loading={isLoading}\n            onClick={this.handleSave} />\n      </div>)\n  }\n\n}\n\nexport default withRouter(ProductCreate);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport ProductsList from '../views/products/ProductsList';\nimport ProductCreate from '../views/products/ProductCreate'\nimport './styles.scss';\n\nconst ProductsRouter = (props) => {\n  const path = props.match.path;\n  const location = props.location;\n  return (\n    <Switch location={location}>\n      <Route path={`${path}/products/list`} component={ProductsList} />\n      <Route path={`${path}/products/new`} component={ProductCreate} />\n      <Route path={`${path}/products`} component={ProductsList} />\n    </Switch>);\n}\n\nexport default withRouter(ProductsRouter);\n\n\n\n\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Text, H2 } from \"@blueprintjs/core\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {}\n  }\n\n  render() {\n    return (\n      <div className=\"product-create-container\">\n      <H2><Text>{`Hola ${this.props.loggedInUser.displayName}!`}</Text></H2>\n      </div>)\n  }\n\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport Home from '../views/home/Home';\nimport './styles.scss';\n\nconst HomeRouter = (props) => {\n  const path = props.match.path;\n  const location = props.location;\n  return (\n    <Switch location={location}>\n      <Route path={`${path}/home`} component={() => <Home loggedInUser={props.loggedInUser}/>} />\n    </Switch>);\n}\n\nexport default withRouter(HomeRouter);\n\n\n\n\n","import React, { useState } from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { Button, Navbar, Position, Tooltip, H2 } from \"@blueprintjs/core\";\nimport Sidebar from \"react-sidebar\";\nimport MenuContent from '../components/menu-content';\nimport ProductRouter from './ProductsRouter';\nimport './styles.scss';\nimport HomeRouter from './HomeRouter';\n\nconst AppRouter = (props) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  return props.loggedInUser && Object.keys(props.loggedInUser).length ? //Check loggedInUser\n    <Sidebar\n      sidebar={ <MenuContent onChange={() => setMenuOpen(!menuOpen)}/>}\n      open={menuOpen}\n      onSetOpen={() => setMenuOpen(!menuOpen)}\n      styles={{ sidebar: { background: \"white\" } }}>\n      <Navbar>\n        <Navbar.Group>\n          <div className=\"menu-button-container\">\n            <Button\n              className=\"bp3-minimal\"\n              icon={menuOpen ? 'menu-closed' : 'menu-open'}\n              onClick={() => setMenuOpen(!menuOpen)} />\n          </div>\n          <Navbar.Divider />\n          <div className=\"navbar-actions-container\">\n            <div className=\"bp3-input-group .modifier search-input\">\n              <span className=\"bp3-icon bp3-icon-search\"></span>\n              <input className=\"bp3-input\" type=\"search\" placeholder=\"Buscar\" dir=\"auto\" />\n            </div>\n          </div>\n        </Navbar.Group>\n        <div className=\"logout-container\">\n          <Tooltip content=\"Cerrar sesión\" position={Position.BOTTOM_LEFT}>\n            <Button className=\"bp3-minimal\" icon=\"log-out\" onClick={() => props.onSignOut()}/>\n          </Tooltip>\n        </div>\n      </Navbar>\n      <div className=\"layout-container\">\n        <HomeRouter loggedInUser={props.loggedInUser}/>\n        <ProductRouter />\n      </div>\n    </Sidebar> :\n    <Switch>\n      <Redirect to={`/session/signin`} component={null} />\n    </Switch>\n};\n\nexport default withRouter(AppRouter);","import React, { useState } from 'react';\nimport { Card, InputGroup, Text, H2, Button, Spinner } from \"@blueprintjs/core\";\nimport firebase from 'firebase';\nimport './styles.scss'\nimport fire from '../../fire';\n\nconst signIn = (setIsLoading, props, user, password) => {\n  setIsLoading(true)\n  firebase.auth()\n  .signInWithEmailAndPassword(user, password)\n    .then(response => {\n      setIsLoading(false);\n      props.onSignIn && props.onSignIn(response.user);\n    })\n    .catch(function(error) {\n      // Handle Errors here.\n      alert(error.code);\n      alert(error.message);\n      setIsLoading(false);\n      // ...\n    });\n}\nconst SignIn = (props) => {\n  const [user, setUser] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  return isLoading ? \n    <Spinner /> : \n    <Card className=\"sign-in-card\">\n      <H2>Bienvenido!</H2>\n      <Text>Ingresa tus datos para poder inisiar sesión</Text>\n      <InputGroup \n        className=\"user-input\" \n        placeholder=\"Usuario\" \n        onChange={(e) => setUser(e.target.value)} />\n      <InputGroup \n        className=\"password-input\" \n        placeholder=\"Contraseña\" \n        type=\"password\" \n        onChange={(e) => setPassword(e.target.value)}/>\n      <Button \n        className=\"bp3-minimal\" \n        text=\"Iniciar sesión\" \n        intent=\"primary\" \n        onClick={() => signIn(setIsLoading, props, user, password)}/>\n    </Card>\n}\n\nexport default SignIn;","import React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router';\n\n// pages\nimport SignIn from '../views/sign-in/SignIn';\n\n// routers\nimport AppRouter from './AppRouter';\n\nconst onUserLogged = (props, user) => {\n  props.onSignIn && props.onSignIn(user);\n}\nconst SessionRouter = (props) => {\n  useEffect(() => {\n    // Actualiza el título del documento usando la API del navegador\n    document.title = `Hardware Store`;\n  });\n  return !props.loggedInUser || !Object.keys(props.loggedInUser).length ?\n    <div className=\"card-container\">\n      <Switch>\n        <Route exact path={`${props.match.path}/signin`} component={() => <SignIn onSignIn={(user) => onUserLogged(props, user)}/>} />\n        <Redirect to={`${props.match.path}/signin`} component={() => <SignIn onSignIn={(user) => onUserLogged(props, user)}/>} />\n      </Switch>\n    </div> :\n    <Switch>\n      <Redirect to={`/app/home`} component={() => <AppRouter loggedInUser={props.loggedInUser} />} />\n    </Switch>\n}\n\nexport default withRouter(SessionRouter);\n","import React, { useState, Suspense, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { Spinner } from \"@blueprintjs/core\";\nimport { UserContext } from './contexts/user-context';\nimport './App.scss';\n\nimport AppRouter from './routers/AppRouter';\nimport SessionRouter from './routers/SessionRouter';\n\nconst loader = <Spinner />\nconst storeUser = (user, setLoggedInUser) => {\n  localStorage.setItem('loggedUser', JSON.stringify(user));\n  setLoggedInUser(user);\n}\nconst App = () => {\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const localUser = localStorage.getItem('loggedUser');\n    if (localUser) {\n      if (!loggedInUser || !Object.keys(loggedInUser).length) {\n        setLoggedInUser(JSON.parse(localUser));\n      }\n    }\n    setIsLoading(false);\n  });\n  \n  return (\n    <div>\n      <UserContext.Provider value={loggedInUser}>\n        <Suspense fallback={loader}>\n          {isLoading ? loader :\n            <BrowserRouter>\n              <Switch>\n                <Route \n                  path={'/app'} \n                  component={() =>\n                      <UserContext.Consumer>\n                        {context => ( <AppRouter loggedInUser={context} onSignOut={() => storeUser(null, setLoggedInUser)} /> )}\n                      </UserContext.Consumer>} />\n                <Route \n                  path={'/session'} \n                  component={() =>\n                    <UserContext.Consumer>\n                      {context => ( <SessionRouter loggedInUser={context} onSignIn={(user) => storeUser(user, setLoggedInUser)} /> )}\n                    </UserContext.Consumer>} />\n                <Redirect \n                  to={'/app'} \n                  component={() => \n                      <UserContext.Consumer>\n                      {context => ( <AppRouter loggedInUser={context} onSignOut={() => storeUser(null, setLoggedInUser)} /> )}\n                      </UserContext.Consumer> } />\n              </Switch>\n            </BrowserRouter>}\n        </Suspense>\n      </UserContext.Provider>\n    </div>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}